#!/bin/bash
#
# Copyright (c) 2021-2022 Orson Teodoro <orsonteodoro@hotmail.com>.  All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

clean()
{
	rm *.o tsha256{a,ha,hp,r} main-tsha512t256{a,ha,hp,r} 2>/dev/null
	reset
}

build_sha256a()
{
	./build "sha256a"
	echo "Running sha256 (assembly)"
	./tsha256a
}

build_sha256ha()
{
	./build "sha256ha"
	echo "Running sha256 (hybrid-asm)"
	./tsha256ha
}

build_sha256hp()
{
	./build "sha256hp"
	echo "Running sha256 (hybrid-plain)"
	./tsha256hp
}

build_sha256r()
{
	./build "sha256r"
	echo "Running sha256 (reference)"
	./tsha256r
}

build_sha512_256a()
{
	./build "sha512/256a"
	echo "Running sha512/256 (assembly)"
	./main-tsha512t256a
}

build_sha512_256ha()
{
	./build "sha512/256ha"
	echo "Running sha512/256 (hybrid-asm)"
	./main-tsha512t256ha
}

build_sha512_256hp()
{
	./build "sha512/256hp"
	echo "Running sha512/256 (hybrid-plain)"
	./main-tsha512t256hp
}

build_sha512_256r()
{
	./build "sha512/256r"
	echo "Running sha512/256 (reference)"
	./main-tsha512t256r
}


main()
{
	clean

	# Suffix meanings:
	#   r means reference
	#   a means assembly
	#   hp means hybrid plain
	#   ha means hybrid assembly
	# The working implementations are listed below:
	build_sha512_256r
	build_sha256r
	build_sha256a
	build_sha256hp
	build_sha256ha


	# FIXME: the below are incomplete due to implementation difficulty
	# and/or possibly design issues.

	# build_sha512_256a
#	build_sha512_256hp
	# build_sha512_256ha
}

main
